package org.example;

import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;

import java.util.ArrayList;
import java.util.List;

public class BotButton {
    public static ReplyKeyboardMarkup languageButtons() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π"));
        row1.add(new KeyboardButton("üá∫üáø O'zbekcha"));
        row1.add(new KeyboardButton("üá∫üá∏ English"));

        rowList.add(row1);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }

    public static ReplyKeyboardMarkup uzCityButtons() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("Toshkent"));
        row1.add(new KeyboardButton("Samarqand"));
        row1.add(new KeyboardButton("Buxoro"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("Andijon"));
        row2.add(new KeyboardButton("NamanganUz"));
        row2.add(new KeyboardButton("Farg'ona"));

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("Xorazm"));
        row3.add(new KeyboardButton("Navoiy"));
        row3.add(new KeyboardButton("Qarshi"));

        KeyboardRow row4 = new KeyboardRow();
        row4.add(new KeyboardButton("Nukus"));
        row4.add(new KeyboardButton("Jizzax"));
        row4.add(new KeyboardButton("Termiz"));

        rowList.add(row1);
        rowList.add(row2);
        rowList.add(row3);
        rowList.add(row4);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }

    public static ReplyKeyboardMarkup ruCityButtons() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("–¢–∞—à–∫–µ–Ω—Ç"));
        row1.add(new KeyboardButton("–°–∞–º–∞—Ä–∫–∞–Ω–¥"));
        row1.add(new KeyboardButton("–ë—É—Ö–∞—Ä–∞"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("–ê–Ω–¥–∏–∂–∞–Ω"));
        row2.add(new KeyboardButton("–ù–∞–º–∞–Ω–≥–∞–Ω"));
        row2.add(new KeyboardButton("–§–µ—Ä–≥–∞–Ω–∞"));

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("–•–æ—Ä–µ–∑–º"));
        row3.add(new KeyboardButton("–ù–∞–≤–æ–∏"));
        row3.add(new KeyboardButton("–ö–∞—Ä—à–∏"));

        KeyboardRow row4 = new KeyboardRow();
        row4.add(new KeyboardButton("–ù—É–∫—É—Å"));
        row4.add(new KeyboardButton("–î–∂–∏–∑–∞–∫"));
        row4.add(new KeyboardButton("–¢–µ—Ä–º–µ–∑"));

        rowList.add(row1);
        rowList.add(row2);
        rowList.add(row3);
        rowList.add(row4);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }

    public static ReplyKeyboardMarkup enCityButtons() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("Tashkent"));
        row1.add(new KeyboardButton("Samarkand"));
        row1.add(new KeyboardButton("Bukhara"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("Andijan"));
        row2.add(new KeyboardButton("Namangan"));
        row2.add(new KeyboardButton("Fergana"));

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("Khorezm"));
        row3.add(new KeyboardButton("Navoi"));
        row3.add(new KeyboardButton("Karshi"));

        KeyboardRow row4 = new KeyboardRow();
        row4.add(new KeyboardButton("Nukus"));
        row4.add(new KeyboardButton("Jizzakh"));
        row4.add(new KeyboardButton("Termez"));

        rowList.add(row1);
        rowList.add(row2);
        rowList.add(row3);
        rowList.add(row4);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }
    public static ReplyKeyboardMarkup mainMenuUz() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üçï Buyurtma berish"));
        row1.add(new KeyboardButton("üìã Buyurtmalar tarixi"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üìû Chopar bilan aloqa"));
        row2.add(new KeyboardButton("‚öôÔ∏è Sozlash"));

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("üìö Ma'lumotlar"));
        row3.add(new KeyboardButton("üë• Jamoamizga qo'shilish"));

        rowList.add(row1);
        rowList.add(row2);
        rowList.add(row3);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }

    public static ReplyKeyboardMarkup mainMenuRu() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üì¶ –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑"));
        row1.add(new KeyboardButton("üìã –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"));
        row2.add(new KeyboardButton("ÔøΩÔøΩÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"));

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("üìû –°–≤—è–∑—å —Å –∫—É—Ä—å–µ—Ä–æ–º"));
        row3.add(new KeyboardButton("üë• –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ"));

        rowList.add(row1);
        rowList.add(row2);
        rowList.add(row3);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }

    public static ReplyKeyboardMarkup mainMenuEn() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üì¶ Make Order"));
        row1.add(new KeyboardButton("üìã Order History"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("‚öôÔ∏è Settings"));
        row2.add(new KeyboardButton("‚ÑπÔ∏è Information"));

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("üìû Contact Courier"));
        row3.add(new KeyboardButton("üë• Join Our Team"));

        rowList.add(row1);
        rowList.add(row2);
        rowList.add(row3);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }
    public static ReplyKeyboardMarkup deliveryTypeUz() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üö∂ Olib ketish"));
        row1.add(new KeyboardButton("üöö Yetkazib berish"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("‚¨ÖÔ∏è Ortga"));

        rowList.add(row1);
        rowList.add(row2);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }

    public static ReplyKeyboardMarkup deliveryTypeRu() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üö∂ –ó–∞–±–µ—Ä—É —Å–∞–º"));
        row1.add(new KeyboardButton("üöö –î–æ—Å—Ç–∞–≤–∫–∞"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"));

        rowList.add(row1);
        rowList.add(row2);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }

    public static ReplyKeyboardMarkup deliveryTypeEn() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üö∂ Pickup"));
        row1.add(new KeyboardButton("üöö Delivery"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("‚¨ÖÔ∏è Back"));

        rowList.add(row1);
        rowList.add(row2);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }

    public static ReplyKeyboardMarkup ourBranchesRu() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üè¢ –ß–∏–ª–∞–Ω–∑–æ—Ä—Å–∫–∏–π —Ñ–∏–ª–∏–∞–ª"));
        row1.add(new KeyboardButton("üè¢ –Æ–Ω—É—Å–∞–±–∞–¥—Å–∫–∏–π —Ñ–∏–ª–∏–∞–ª"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üè¢–°–µ—Ä–≥–µ–ª–∏–π—Å–∫–∏–π —Ñ–∏–ª–∏–∞–ª "));
        row2.add(new KeyboardButton("üè¢ –Ø–∫–∞—Å–∞—Ä–∞–π—Å–∫–∏–π —Ñ–∏–ª–∏–∞–ª"));

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"));

        rowList.add(row1);
        rowList.add(row2);
        rowList.add(row3);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }
    public static ReplyKeyboardMarkup ourBranchUz() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üè¢ Chilonzor filiali"));
        row1.add(new KeyboardButton("üè¢ Yunusobod filiali"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üè¢ Sergeli filiali"));
        row2.add(new KeyboardButton("üè¢ Yakkasaroy filiali"));

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("‚¨ÖÔ∏è Back"));

        rowList.add(row1);
        rowList.add(row2);
        rowList.add(row3);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }
    public static ReplyKeyboardMarkup ourBranchesEn() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üè¢ Chilonzor branch"));
        row1.add(new KeyboardButton("üè¢ Yunusobod branch"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üè¢ Sergeli branch"));
        row2.add(new KeyboardButton("üè¢ Yakkasaroy branch"));

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("‚¨ÖÔ∏è Orqaga"));

        rowList.add(row1);
        rowList.add(row2);
        rowList.add(row3);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }
    public static ReplyKeyboardMarkup shareLocationUz() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        KeyboardButton locationButton = new KeyboardButton("üìç Lokatsiyani ulashish");
        locationButton.setRequestLocation(true);
        row1.add(locationButton);

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("‚¨ÖÔ∏è Orqaga"));

        rowList.add(row1);
        rowList.add(row2);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }

    public static ReplyKeyboardMarkup locationButtons() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üåê Ortga"));

        KeyboardRow row2 = new KeyboardRow();
        KeyboardButton locationButton = new KeyboardButton("üìç Eng yaqin filialni aniqlash");
        locationButton.setRequestLocation(true);
        row2.add(locationButton);

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("üåê Bu yerda buyurtma berish"));
        row3.add(new KeyboardButton("üìç Filialni tanlang"));

        rowList.add(row1);
        rowList.add(row2);
        rowList.add(row3);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }

    public static ReplyKeyboardMarkup pickupBranchButtons() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        KeyboardButton locationButton = new KeyboardButton("üìç Eng yaqin filialni aniqlash");
        locationButton.setRequestLocation(true);
        row1.add(locationButton);
        row1.add(new KeyboardButton("üìç Filialni tanlang"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üåê Bu yerda buyurtma berish"));
        row2.add(new KeyboardButton("‚¨ÖÔ∏è Ortga"));

        rowList.add(row1);
        rowList.add(row2);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }

    public static ReplyKeyboardMarkup branchListButtons() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("Atlas Chimgan"));
        row1.add(new KeyboardButton("Sergeyli 2"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("Nukus Asia.uz KSM"));
        row2.add(new KeyboardButton("Megaplanet KSM"));

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("Oybek"));
        row3.add(new KeyboardButton("Buyuk ipak yo'li"));

        KeyboardRow row4 = new KeyboardRow();
        row4.add(new KeyboardButton("Qo'yliq-5"));
        row4.add(new KeyboardButton("Parus KSM"));

        KeyboardRow row5 = new KeyboardRow();
        row5.add(new KeyboardButton("‚¨ÖÔ∏è Ortga"));

        rowList.add(row1);
        rowList.add(row2);
        rowList.add(row3);
        rowList.add(row4);
        rowList.add(row5);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }

    public static ReplyKeyboardMarkup orderMenuButtons() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("ÔøΩÔøΩÔøΩÔøΩ Savat"));
        row1.add(new KeyboardButton("üçï Pitsa"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("ü•ô Pide va Lavash"));
        row2.add(new KeyboardButton("üçî Setlar"));

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("üçü Snaklar"));
        row3.add(new KeyboardButton("üçÖ Souslar"));

        KeyboardRow row4 = new KeyboardRow();
        row4.add(new KeyboardButton("‚¨ÖÔ∏è Ortga"));

        rowList.add(row1);
        rowList.add(row2);
        rowList.add(row3);
        rowList.add(row4);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }

    public static ReplyKeyboardMarkup pideLavashMenuButtons() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("VEGETARIAN LAVASH"));
        row1.add(new KeyboardButton("TOVUQ STEYK LAVASH"));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("PISHLOQLI PIDE"));
        row2.add(new KeyboardButton("GO'SHTLI PIDE"));

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("3+1 VEGETARIAN LAVASH"));
        row3.add(new KeyboardButton("3+1 TOVUQ STEYK LAVASH"));

        KeyboardRow row4 = new KeyboardRow();
        row4.add(new KeyboardButton("‚¨ÖÔ∏è Ortga"));
        row4.add(new KeyboardButton("üõí Savat"));

        rowList.add(row1);
        rowList.add(row2);
        rowList.add(row3);
        rowList.add(row4);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }

    public static ReplyKeyboardMarkup deliveryMenuButtons() {
        ReplyKeyboardMarkup markup = new ReplyKeyboardMarkup();
        List<KeyboardRow> rowList = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        KeyboardButton locationButton = new KeyboardButton("üìç Eng yaqin filialni aniqlash");
        locationButton.setRequestLocation(true);
        row1.add(locationButton);

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton("üè† Mening manzillarim"));

        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton("‚¨ÖÔ∏è Ortga"));

        rowList.add(row1);
        rowList.add(row2);
        rowList.add(row3);

        markup.setKeyboard(rowList);
        markup.setResizeKeyboard(true);
        markup.setSelective(true);

        return markup;
    }
}

